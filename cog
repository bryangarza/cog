#!/bin/bash

usage() {
    cat<<EOF
usage: cog <package>

  options
    -f, --force   overwrite existing files when downloading
                    (passed to cower)

EOF
}

update() {
    local up="$(cower -ubq)"
    local string=''

    for each in $up
    do
        string="$string $each"
    done

    cog "$coweropts" "$string"
    exit 0
}

if [[ $1 == '-h' || $1 == '--help' || $1 == '-?' ]]; then
    usage
    exit 0
fi

if [[ $1 == '-f' || $1 == '--force' ]]; then
    coweropts='--force'
fi

shift

if [[ $1 == '-u' || $1 == '--update' ]]; then
    update
fi

vars() {
    local confdir="$HOME/.config/cogrc"

    if [[ -s "$confdir" ]]; then
        . "$confdir"
    else
        die "$confdir missing"
    fi

    cwd="$PWD"

    setTrap
}

cogInstall() {
    local package="$@"

    cd "$cogdir"

    cower --download $coweropts "$package"

    cd "$cogdir/$package"

    if prompt 'edit PKGBUILD?'; then
        $EDITOR PKGBUILD
    fi

    makepkg -scfi --noconfirm 
}

msg() {
    echo -e "$@"
}

die() {
    msg "error: $@"
    exit 1
}

cleanup() {
    cd "$cwd"
}

setTrap() {
    trap 'cleanup' EXIT
}

prompt() {
    while true; do
        read -p "$@ [Y/n] " yn
        case $yn in
            [Yy]* ) return 0
                ;;
            [Nn]* ) return 1
                ;;
            * ) msg 'invalid answer'
                ;;
        esac
    done
}

delegateInstall() {
    local package_list=()

    # populate the list of packages
    for package in $@
    do
        package_list[${#package_list[*]}]="$package"
    done

    local package_list_len=${#package_list[@]}

    if ((package_list_len == 0 )); then
        msg 'there is nothing to do'
        exit 0
    fi

    msg "Targets ($package_list_len): ${package_list[*]}"

    if prompt 'Proceed with installation?'; then

        # install each package
        for package in "${package_list[@]}"
        do
            if ! cogInstall "$package"; then
                msg "error: failed to install $package"
                if prompt "remove $cogdir/$package before exiting?"
                then
                    rm -rf "$cogdir/$package"
                fi

                die ''
            fi
        done

    fi
}

vars
delegateInstall "$@"
